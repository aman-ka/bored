{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","error","isLoaded","items","fetch","then","response","json","result","console","log","activity","setState","this","Header","className","text","getnew","window","location","reload","Body","role","onClick","message","color","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAe,I,0BCoFAA,E,kDA5Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,MAAO,IALQ,E,qDASnB,WAAqB,IAAD,OAClBC,MAAM,0CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MACC,SAACG,GACCC,QAAQC,IAAIF,EAAOG,UACnB,EAAKC,SAAS,CACZV,UAAU,EACVC,MAAOK,OAGX,SAACP,GACC,EAAKW,SAAS,CACZV,UAAU,EACVD,e,oBAMV,WACE,MAAmCY,KAAKb,MAAhCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,MASnBW,EAAS,SAACf,GACd,OAAQ,iCAAQ,8BACd,oBAAIgB,UAAU,eAAd,SAA8BhB,EAAMiB,YAGxC,SAASC,IACPC,OAAOC,SAASC,QAAO,GAGzB,IAAMC,EAAO,SAACtB,GACZ,OACE,mCACA,0CAAkB,uBAAK,qBAAKgB,UAAU,oBAAoBO,KAAK,QAAxC,SAAiDnB,EAAMQ,WAC9E,uBACA,wBAAQI,UAAU,kBAAkBQ,QAASN,EAA7C,kCAkBJ,OAAIhB,EAtCK,0CAAaA,EAAMuB,WAuCpBtB,EAXJ,sBAAKa,UAAU,YAAf,UACA,uBACA,cAACD,EAAD,CAAQE,KAAK,kBACb,uBACA,cAACK,EAAD,IACA,0BA7BK,qBAAKN,UAAU,UAAf,SAAyB,iCAAQ,cAAC,IAAD,CAAMU,MAAM,oB,GAtCxCC,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.38dacda0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport './custom.scss';\nimport { Ring } from 'react-awesome-spinners'\n\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://www.boredapi.com/api/activity/\")\n      .then(response => response.json())\n      .then(\n        (result) => {\n          console.log(result.activity);\n          this.setState({\n            isLoaded: true,\n            items: result,\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n   )\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n\n    const containsErrorMessage = () => {\n      return <div>Error: {error.message}</div>;\n    };\n\n    const isLoading = () => {\n      return <div className=\"loading\"><center><Ring color='#000000'/></center></div>;\n    };\n    const Header = (props) => {\n      return (<center><div>\n        <h2 className=\"text-primary\">{props.text}</h2>\n      </div></center>);\n    }\n    function getnew() {\n      window.location.reload(true);\n    }\n\n    const Body = (props) => {\n      return(\n        <center>\n        <div>Do this</div><br/><div className=\"alert alert-light\" role=\"alert\">{items.activity}</div>\n        <br />\n        <button className=\"btn btn-primary\" onClick={getnew}>Get Another task</button>\n        \n        </center>\n      );\n    }\n\n    const results = () => {\n      return (\n        <div className=\"container\">\n        <br />\n        <Header text=\"Getting Bored\"/>\n        <br />\n        <Body />\n        <br />\n        </div>\n      )\n    }\n\n    if (error) return containsErrorMessage();\n    return !isLoaded ? isLoading() : results();\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}